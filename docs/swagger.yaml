basePath: /
definitions:
  models.Account:
    properties:
      company_id:
        type: integer
      createdAt:
        type: string
      email:
        type: string
      id:
        type: integer
      name:
        type: string
      password:
        type: string
      phone:
        type: string
      tokens:
        additionalProperties:
          type: string
        type: object
      updatedAt:
        type: string
    type: object
  models.Company:
    properties:
      bank_detail:
        type: string
      email:
        type: string
      id:
        type: integer
      kind:
        type: string
      name:
        type: string
      phone:
        type: string
    type: object
  models.Delivery:
    properties:
      cargo:
        type: string
      company_id:
        type: integer
      id:
        type: integer
      price:
        type: number
      shipment_date:
        type: string
      shipment_place:
        type: string
      trailer_type:
        type: string
      unloading_place:
        type: string
      volume_cargo:
        type: number
      weight_cargo:
        type: number
    type: object
host: localhost:8888
info:
  contact:
    email: support@logistic.com
    name: API Support
  description: This is a sample service ...
  license: {}
  termsOfService: http://swagger.io/terms/
  title: Logistic API
  version: "1.0"
paths:
  /api/company/register:
    post:
      description: Create a new company.
      parameters:
      - description: company
        in: body
        name: company
        required: true
        schema:
          $ref: '#/definitions/models.Company'
      produces:
      - application/json
      responses:
        "200":
          description: 'response structure: {message:"answer"}'
          schema:
            $ref: '#/definitions/models.Account'
        "400":
          description: 'response structure: {error:"error message"}'
          schema:
            type: string
        "500":
          description: 'response structure: {error:"error message"}'
          schema:
            type: string
      summary: Registration company of logistic-service service
      tags:
      - Company
  /api/deliveries:
    post:
      description: Creating new delivery.
      parameters:
      - description: delivery
        in: body
        name: delivery
        required: true
        schema:
          $ref: '#/definitions/models.Delivery'
      produces:
      - application/json
      responses:
        "201":
          description: 'response structure: {message:delivery}'
          schema:
            $ref: '#/definitions/models.Delivery'
        "400":
          description: 'response structure: {error:"error message"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Creating new delivery.
      tags:
      - Delivery
  /api/login:
    post:
      description: Login in ragger with email and password
      parameters:
      - description: account email
        in: query
        name: email
        required: true
        type: string
      - description: account password len(password) > 6
        in: query
        name: password
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 'response structure: {message:"answer"}'
          schema:
            $ref: '#/definitions/models.Account'
        "400":
          description: 'response structure: {error:"error message"}'
          schema:
            type: string
      summary: Login in ragger
      tags:
      - Account
  /api/new_password:
    post:
      description: Setting new password for account
      parameters:
      - description: new password for account
        in: query
        name: password
        required: true
        type: string
      - description: confirm_password new password
        in: query
        name: confirm_password
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200": {}
        "400":
          description: 'response structure: {error:"error message"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Set new password
      tags:
      - Account
  /api/register:
    post:
      description: Create a new user with the input name, email & password.
      parameters:
      - description: account
        in: body
        name: account
        required: true
        schema:
          $ref: '#/definitions/models.Account'
      produces:
      - application/json
      responses:
        "200":
          description: 'response structure: {message:"answer"}'
          schema:
            $ref: '#/definitions/models.Account'
        "400":
          description: 'response structure: {error:"error message"}'
          schema:
            type: string
      summary: Registration user of contact service
      tags:
      - Account
  /api/restore_password:
    get:
      description: Returned html page for setting new password
      produces:
      - text/html
      responses:
        "200": {}
        "500":
          description: 'response structure: {error:"error message"}'
          schema:
            type: string
      summary: Restore password
      tags:
      - Account
  /api/token:
    get:
      description: Generate Token for access to ragger
      parameters:
      - description: last generated refresh_token
        in: query
        name: refresh_token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 'response structure: {message:"access_token:access, refresh_token:refresh"}'
          schema:
            $ref: '#/definitions/string'
        "401":
          description: 'response structure: {error:"error message"}'
          schema:
            type: string
      summary: Generate Token in ragger
      tags:
      - Token
  /health:
    get:
      description: Health check ragger service
      produces:
      - application/json
      responses:
        "200":
          description: 'response structure: {status:"UP"}'
          schema:
            type: string
      summary: Ragger health check
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
